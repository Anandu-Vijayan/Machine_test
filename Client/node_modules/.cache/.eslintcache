[{"C:\\Users\\MANU\\Desktop\\CV\\Task\\Client\\src\\index.js":"1","C:\\Users\\MANU\\Desktop\\CV\\Task\\Client\\src\\App.js":"2","C:\\Users\\MANU\\Desktop\\CV\\Task\\Client\\src\\reportWebVitals.js":"3","C:\\Users\\MANU\\Desktop\\CV\\Task\\Client\\src\\Pages\\Home.js":"4","C:\\Users\\MANU\\Desktop\\CV\\Task\\Client\\src\\components\\Table.jsx":"5"},{"size":535,"mtime":1678142786000,"results":"6","hashOfConfig":"7"},{"size":194,"mtime":1678152090000,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1678142786000,"results":"9","hashOfConfig":"7"},{"size":163,"mtime":1678152102000,"results":"10","hashOfConfig":"7"},{"size":10625,"mtime":1678211279050,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hjgzq6",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"C:\\Users\\MANU\\Desktop\\CV\\Task\\Client\\src\\index.js",[],[],"C:\\Users\\MANU\\Desktop\\CV\\Task\\Client\\src\\App.js",["28"],[],"C:\\Users\\MANU\\Desktop\\CV\\Task\\Client\\src\\reportWebVitals.js",[],[],"C:\\Users\\MANU\\Desktop\\CV\\Task\\Client\\src\\Pages\\Home.js",[],[],"C:\\Users\\MANU\\Desktop\\CV\\Task\\Client\\src\\components\\Table.jsx",["29"],[],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { motion } from 'framer-motion'\n\nconst Table = () => {\n\n    const [ProductId, setProductId] = useState('')\n    const [ProductTitle, setProductTitle] = useState('')\n    const [ProductDescription, setProductDescription] = useState('')\n    const [ProductPrice, setProductPrice] = useState('')\n    const [Quantity, setQuantity] = useState()\n    const [productDetails, setProductDetails] = React.useState([])\n    const [id,setId] = useState()\n    const [del,setDel] = useState(false)\n\n    const [modal, setModal] = React.useState(false)\n    const [UpdateModal, setUpdateModal] = React.useState(false)\n\n\n    useEffect(() => {\n        axios.get(`http://localhost:5000/getAll_products`).then((res) => {\n            console.log(res.data.getAllProducts)\n            setProductDetails(res.data.getAllProducts)\n        })\n    }, [modal,UpdateModal,del])\n\n\n  \n\n\n\n\n    const formUpdate = (data) => {\n        console.log(\"....\", data)\n    }\n\n\n\n\n    const openAddProductModal = () => {\n        setModal(true)\n    }\n\n    const formData = new FormData()\n\n    const addProduct = () => {\n        const details = {\n\n            Product_Code: ProductId,\n            Product_title: ProductTitle,\n            description: ProductDescription,\n            quantity: Quantity,\n            price: ProductPrice\n\n\n        }\n        try {\n            axios.post(`http://localhost:5000/create_product`,details).then((res)=>{\n                if(res) alert('success')\n        setModal(false)\n\n            })\n        } catch (error) {\n            \n        }\n\n    }\n\n    const openUpdateModal = (res) => {\n        setUpdateModal(true)\n        formUpdate(res)\n        setProductId(res.Product_Code)\n        setProductDescription(res.description)\n        setProductTitle(res.Product_title)\n        setQuantity(res.quantity)\n        setProductPrice(res.price)\n        setId(parseInt(res.id))\n        // console.log(res)\n\n    }\n\n    const updateProduct = () => {\n        // setUpdateModal(false)\n\n        const details = {\n\n            Product_Code: ProductId,\n            Product_title: ProductTitle,\n            description: ProductDescription,\n            quantity: Quantity,\n            price: ProductPrice\n\n\n        }\n        console.log(details)\n        try {\n            axios.put(`http://localhost:5000/update_product/${id}`, details).then((res) => {\n                if (res) setUpdateModal(false)\n            }).catch(err => console.log(err))\n        } catch (error) {\n\n        }\n    }\n\n    const deleteProduct =(id)=>{\n        try {\n            axios.delete(`http://localhost:5000/delete_product/${id}`).then((res)=>{\n\n                if(res) alert('success')\n                setDel(!del)\n\n            })\n        } catch (error) {\n            \n        }\n    }\n\n\n    return (\n        <div className={`bg-slate-200 h-screen overflow-hidden `}>\n\n            <div className='w-full h-20'>\n\n            </div>\n            <div className='w-full flex justify-center px-10 shadow shadow-md bg-gradient-to-r from-blue-100 via-blue-50 to-blue-100 py-5'>\n                <div className='container flex justify-start'>\n                    <button onClick={() => openAddProductModal()} className='bg-stone-100 px-3 text-sm py-1 rounded-lg ring-teal-500 hover:bg-teal-600 hover:ring-1 ring-1 text-teal-700 hover:text-white shadow hover:font-semibold'>\n\n\n                        Add New Product\n\n                    </button>\n                </div>\n            </div>\n\n\n\n            <div class=\"relative overflow-x-auto h-[100vh] z-10\">\n                <table class=\"container mx-auto border rounded-xl shadow shadow-lg shadow-stone-700 overflow-hidden  mt-10 text-sm text-left text-gray-100 dark:text-gray-900\">\n                    <thead class=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-100 dark:text-gray-400 border-b border-stone-400\">\n                        <tr>\n                            <th scope=\"col\" class=\"px-6 py-3\">\n                                Product Code\n                            </th>\n                            <th scope=\"col\" class=\"px-6 py-3\">\n                                Product Title\n                            </th>\n                            <th scope=\"col\" class=\"px-6 py-3\">\n                                description\n                            </th>\n                            <th scope=\"col\" class=\"px-6 w-60 py-3\">\n                                quantity\n                            </th>\n                            <th scope=\"col\" class=\"px-6 w-60 py-3\">\n                                price\n                            </th>\n                            <th scope=\"col\" class=\"px-6 w-60 py-3\">\n                                Actions\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            productDetails.map((res) => {\n                                return (\n                                    <tr class=\"bg-white border-b hover:bg-stone-200  duration-200 border-black\">\n                                        <th scope=\"row\" class=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-gray-900\">\n                                            {res.Product_Code}\n                                        </th>\n                                        <td class=\"px-6 py-4\">\n                                            {res.Product_title}\n                                        </td>\n                                        <td class=\"px-6 py-4\">\n                                            {res.description}\n                                        </td>\n                                        <td class=\"px-6 py-4\">\n                                            {res.quantity}\n                                        </td>\n                                        <td class=\"px-6 py-4\">\n                                            {res.price} /-\n                                        </td>\n                                        <td class=\"px-6 flex gap-2 w-60 py-4\">\n                                            <button onClick={() => openUpdateModal(res)} className='bg-blue-400 w-20 h-6 rounded-lg text-white hover:bg-blue-600'>Update</button>\n                                            <button onClick={()=>deleteProduct(res.id)} className='bg-red-400 w-20 h-6 rounded-lg text-white hover:bg-red-600'>Delete</button>\n                                        </td>\n                                    </tr>\n                                )\n                            })\n                        }\n\n                    </tbody>\n                </table>\n                {\n                    modal ? <>\n                        <motion.div initial={{ y: 1000 }} animate={{ y: -350, transition: { duration: 1 } }} className='w-[30vw] shadow shadow-xl py-8 shadow-stone-600 mx-auto p-10 z-10 bg-stone-300 rounded-xl'>\n                            <div className=' h-full grid grid-cols-1 gap-1 mx-auto '>\n                                <input  onChange={(e) => setProductId(e.target.value)} type=\"text \"  className='border   m-2 rounded-xl h-8 px-3 py-2 text-sm' placeholder='Enter Product Code ...' name=\"\" id=\"\" />\n                                <input   onChange={(e) => setProductTitle(e.target.value)} type=\"text \" className='border   m-2 rounded-xl h-8 px-3 py-2 text-sm' placeholder='Enter Product Title ...' name=\"\" id=\"\" />\n                                <textarea   onChange={(e) => setProductDescription(e.target.value)} type=\"text \" className='border  m-2 rounded-xl h-20 px-3 py-2 text-sm' placeholder='Enter Product Description ...' name=\"\" id=\"\" />\n                                <input  onChange={(e) => setQuantity(e.target.value)} type=\"text\" className='border  m-2 rounded-xl h-8 px-3 py-2 text-sm' placeholder='Enter Product Quantity ...' name=\"\" id=\"\" />\n                                <input   onChange={(e) => setProductPrice(e.target.value)} type=\"text \" className='border  m-2 rounded-xl h-8 px-3 py-2 text-sm' placeholder='Enter Product Price ...' name=\"\" id=\"\" />\n                                {/* <input type=\"text \" className='w-60 border  m-2 rounded-xl h-8 px-3 text-sm' placeholder='Enter Product Name ...' name=\"\" id=\"\" /> */}\n\n\n                            </div>\n                            <div><button onClick={() => addProduct()} className='bg-teal-500 py-1 hover:bg-teal-600 w-20 m-4 rounded-xl text-sm'>Add</button></div>\n                        </motion.div>\n\n                    </> : null\n                }\n\n\n                {\n                    UpdateModal ? <>\n                        <motion.div initial={{ y: 1000 }} animate={{ y: -350, transition: { duration: 1 } }} className='w-[30vw] shadow shadow-xl py-8 shadow-stone-600 mx-auto p-10 z-10 bg-blue-200 rounded-xl'>\n                            <div className=' h-full grid grid-cols-1 gap-1 mx-auto '>\n\n\n                                <input type=\"text \" onChange={(e) => setProductId(e.target.value)} className='border   m-2 rounded-xl h-8 px-3 py-2 text-sm placeholder-slate-600' placeholder={ProductId} name=\"\" id=\"\" />\n                                <input type=\"text \" onChange={(e) => setProductTitle(e.target.value)} className='border   m-2 rounded-xl h-8 px-3 py-2 text-sm placeholder-slate-600' placeholder={ProductTitle} name=\"\" id=\"\" />\n                                <textarea type=\"text \" onChange={(e) => setProductDescription(e.target.value)} className='placeholder-slate-600 border  m-2 rounded-xl h-20 px-3 py-2 text-sm' placeholder={ProductDescription} name=\"\" id=\"\" />\n                                <input type=\"text \" onChange={(e) => setQuantity(e.target.value)} className='placeholder-slate-600 border  m-2 rounded-xl h-8 px-3 py-2 text-sm' placeholder={Quantity} name=\"\" id=\"\" />\n                                <input type=\"text \" onChange={(e) => setProductPrice(e.target.value)} className='placeholder-slate-600 border  m-2 rounded-xl h-8 px-3 py-2 text-sm' placeholder={ProductPrice} name=\"\" id=\"\" />\n                                {/* <input type=\"text \" className='w-60 border  m-2 rounded-xl h-8 px-3 text-sm' placeholder='Enter Product Name ...' name=\"\" id=\"\" /> */}\n\n\n\n                            </div>\n                            <div><button onClick={() => updateProduct()} className='bg-teal-500 py-1 text-white hover:bg-teal-600 w-20 m-4 rounded-xl text-sm'>Update</button></div>\n                        </motion.div>\n\n                    </> : null\n                }\n            </div>\n\n\n\n\n        </div>\n\n\n    )\n}\n\n\n\n\nexport default Table",{"ruleId":"30","severity":1,"message":"31","line":1,"column":8,"nodeType":"32","messageId":"33","endLine":1,"endColumn":12},{"ruleId":"30","severity":1,"message":"34","line":44,"column":11,"nodeType":"32","messageId":"33","endLine":44,"endColumn":19},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'formData' is assigned a value but never used."]